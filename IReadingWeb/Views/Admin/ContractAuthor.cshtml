@{
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}
@model BookChapter
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@* <button type="button" onclick="document.getElementById('formModal').reset();" class="btn btn-success" data-toggle="modal" data-target="#exampleModalPost">
    Tạo mới
</button> *@
<style>

    .form-control {
        margin-left: 0px !important;
    }

    .highlight-bad-word {
        color: red;
        font-weight: bold;
        text-decoration: underline;
    }

    .ai-feedback {
        border: 1px solid #8080804d;
        border-radius: 6px;
        margin-bottom: 2rem;
    }

    button {
        margin-left: 5px;
    }

    .input-group {
        padding-left: 5px !important;
    }

    #loadingSumary, .loadingDiv {
        position: absolute;
        top: 50%;
        right: 50%;
    }

    .ql-snow {
        margin-left: 0px !important;
        border-radius: 0.375rem !important;
    }

    /*     .form-control {
            margin-left: 0px !important;
        }

        #loadingSumary{
            position:absolute;
            top: 50%;
            right:50%;
        }

        .input-group {
            padding-left: 5px !important;
        }

        .ql-snow{
            margin-left: 0px !important;
            border-radius: 0.375rem !important;
        } */

</style>
<div class="row">
    <form method="post" id="formBody" asp-action="UpdateChapterBook">
        <div class="col-12">
            <div class="card my-4">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                        <h6 class="text-white text-capitalize ps-3">Cập nhật chương</h6>
                        <span class="ps-3 text-white" style="font-size:12px">@ViewBag.BookName</span>
                    </div>
                </div>
                <div class="card-body px-0 pb-2">
                    <div class="note">
                        <ul>
                            <li>- Hướng dẫn vui lòng xem tại kiến thức cơ bản</li>
                        </ul>
                    </div>
                    <div class="table-responsive p-0 m-4 mt-0">
                        <input style="width:100%" type="number" asp-for="BookId" value="@ViewBag.BookId" class="form-control" hidden>
                        <div style="display:block" class="form-group input-group input-group-outline mt-0">
                            <label for="Name">Tên chương:</label>
                            <input style="width:100%" disabled type="text" asp-for="ChapterName" class="form-control" autofocus>
                        </div>
                        <div class="row input-group input-group-outline mt-4">
                            <div style="display:block">
                                <label for="Content">Nội dung chương:</label>
                                <div class="row" style="display:flex">
                                    <div class="col-9">
                                        @* contenteditable="true" *@
                                        <div style="height:19rem;overflow: auto;" id="ContentDiv" class="form-control"></div>
                                        <textarea oninput="getWordNo()" asp-for="Content" type="text" class="d-none form-control" rows="18"></textarea>
                                        @* <label>Số từ: <span id="wordNoCount">0</span></label> *@
                                        @* <input type="number" hidden asp-for="WordNo" /> *@
                                    </div>
                                    <div class="col-3 ai-feedback" style="position:relative;margin-bottom:0">
                                        <ul id="requestContent" style="height:18rem;max-height:18rem;overflow: auto;padding-left:16px">
                                            @Html.Raw(@Model.CommentAI)
                                        </ul>
                                        @* <div id="loadingDivFeedBack" class="dot-elastic loadingDiv"></div> *@
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div style="position:relative">
                            <div style="display:block" class="input-group input-group-outline mt-4">
                                <label for="Summary">Tóm tắt chương:</label>
                                <textarea style="width:100%" disabled asp-for="Summary" type="text" class=" form-control" rows="8"></textarea>
                            </div>
                            <div id="loadingSumary" class="loader"></div>
                        </div>

                        <div style="display:block" class="form-group input-group input-group-outline mt-4">
                            <label for="Name">Thu phí:</label>
                            <input style="width:100%" type="number" disabled asp-for="Price" class="form-control">
                        </div>
                        @if (User.IsInRole("Author"))
                        {
                            <button type="submit" class="btn btn-success mt-4">Lưu thông tin</button>
                        }
                        <button type="button" onclick="approveChapter(@ViewBag.BookId,'@Model.Id')" class="@(Model.BookType != BookType.PendingApproval ? "disabled" : "") btn btn-success mt-4 ml-2">Duyệt chương</button>
                        <button type="button" onclick="declineChapter(@ViewBag.BookId,'@Model.Id')" class="@(Model.BookType != BookType.PendingApproval ? "disabled" : "") btn btn-danger mt-4 ml-2">Hủy duyệt</button>
                        @if (ViewBag.ReturnUrl == "ApproveBook")
                        {
                            <button type="button" onclick="window.location.href='/Admin/ApproveBook/@ViewBag.BookId'" class="btn btn-secondary mt-4 ml-2">Quay lại</button>
                        }
                        else if (ViewBag.ReturnUrl == "ChapterBooks")
                        {
                            <button type="button" onclick="window.location.href='/Admin/@ViewBag.BookId/ChapterBooks'" class="btn btn-secondary mt-4 ml-2">Quay lại</button>
                        }

                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<script src="~/lib/jquery/dist/jquery.js" asp-append-version="true"></script>
<script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js" asp-append-version="true"></script>
<script src="https://cdn.jsdelivr.net/npm/mark.js@8.11.1/dist/mark.min.js" asp-append-version="true"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js" asp-append-version="true"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js" asp-append-version="true"></script>
@* <script src="~/js/chapterv1.js" asp-append-version="true"></script> *@
<script type="text/javascript">
    document.getElementById('loadingSumary').classList.add('d-none');
    // document.getElementById('loadingDivFeedBack').classList.add('d-none');
    // document.getElementById('CreatBookId').classList.add('active');

    function approveChapter(id,chapterId) {
        if (confirm("Bạn có muốn duyệt chương ?") == false) return;
        $('#tbodyFeedback').html('');
        $('#loadingDivFeedBack').show();
        //var formData = new FormData();
        //formData.append("chapterId", chapterId);
        $.ajax(
            {
                url: `/Admin/UpdateApproveChapterBook/${id}?chapterId=${chapterId}`,
                type: "GET",
                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                //data: formData,
                //dataType: "json",
                async: true,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.IsSussess == false) {
                        notyf.error(data.message);
                        return;
                    }
                    notyf.success(data.message);
                    setTimeout(() => {
                        window.location.reload();
                    }, 800);
                }
            }
        );

    }

    function declineChapter(id, chapterId) {
        if (confirm("Bạn có muốn hủy duyệt ?") == false) return;
        //var formData = new FormData();
        $.ajax(
            {
                url: `/Admin/DeclineChapterBook/${id}?chapterId=${chapterId}`,
                type: "GET",
                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                //data: formData,
                //dataType: "json",
                async: true,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.IsSussess == false) {
                        notyf.error(data.message);
                        return;
                    }
                    notyf.success(data.message);
                    setTimeout(() => {
                        window.location.reload();
                    }, 800);
                }
            }
        );

    }


    const quill = new Quill('#ContentDiv', {
        theme: 'snow',
        modules: {
            toolbar: [
                [{ 'header': [1, 2, 3, false] }],
                ['bold', 'italic', 'strike'],
                [{ 'background': [] }],
                [{ 'script': 'sub' }, { 'script': 'super' }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                [{ 'indent': '-1' }, { 'indent': '+1' }],
                [{ 'align': [] }],
                ['clean']
            ]
        }
    });

    const input1 = document.getElementById("ContentDiv");
    const events = [
        "click", "focus", "blur", "change", "input",
        "keydown", "keyup", "keypress",
        "paste", "cut", "copy", "mousedown", "mouseup",
        "mouseenter", "mouseleave", "mouseover", "mouseout",
        "drag", "drop", "contextmenu"
    ];

    // events.forEach(event => {
    //     input1.addEventListener(event, (e) => {
    //         getWordNo();
    //     });
    // });

    const htmlContent = '@Html.Raw(Model.Content)';
    quill.clipboard.dangerouslyPasteHTML(htmlContent);


    highlightBadWordsPreserveFormat();

    function escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    function highlightBadWordsPreserveFormat() {
        let data = $('#requestContent').html();
        data = data.replaceAll('=&gt;','=>')
        //console.log(data);
        const matcheWords = [...data.matchAll(/<li.*?>'(.+?)'\s*=>/g)];
        const words = matcheWords.map(m => m[1]);
        //console.log(words);
        const text = quill.getText();
        const delta = quill.getContents();
        if (!words || words.length === 0) {
            quill.formatText(0, text.length, {
                color: false,
                underline: false
            }, 'user');
            return;
        }

        words.forEach(word => {
            let regex = new RegExp(`(?:^|[^\\p{L}\\p{N}])(${escapeRegExp(word)})(?=[^\\p{L}\\p{N}]|$)`, 'giu');
            let match;

            while ((match = regex.exec(text)) !== null) {
            const startIndex = match.index + match[0].length - match[1].length;
            const length = match[1].length;

                quill.formatText(startIndex, length, {
                    // background: 'yellow',
                    color: 'red',
                    underline: true
                }, 'user');
            }
        });
        quill.disable();
    }



</script>